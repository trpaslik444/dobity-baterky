<?php
/**
 * Nearby Queue Admin - Admin rozhraní pro správu fronty nearby bodů
 * @package DobityBaterky
 */

namespace DB\Admin;

use DB\Jobs\Nearby_Queue_Manager;
use DB\Jobs\Nearby_Batch_Processor;
use DB\Jobs\Nearby_Auto_Processor;
use DB\Jobs\API_Quota_Manager;

class Nearby_Queue_Admin {
    
    private $queue_manager;
    private $batch_processor;
    private $auto_processor;
    private $quota_manager;
    
    public function __construct() {
        $this->queue_manager = new Nearby_Queue_Manager();
        $this->batch_processor = new Nearby_Batch_Processor();
        $this->auto_processor = new Nearby_Auto_Processor();
        $this->quota_manager = new API_Quota_Manager();
        
        add_action('admin_menu', array($this, 'add_admin_menu'));
        add_action('wp_ajax_db_process_nearby_batch', array($this, 'ajax_process_batch'));
        add_action('wp_ajax_db_enqueue_all_points', array($this, 'ajax_enqueue_all_points'));
        add_action('wp_ajax_db_reset_failed_items', array($this, 'ajax_reset_failed_items'));
        add_action('wp_ajax_db_cleanup_old_items', array($this, 'ajax_cleanup_old_items'));
        add_action('wp_ajax_db_get_queue_details', array($this, 'ajax_get_queue_details'));
        add_action('wp_ajax_db_set_priority', array($this, 'ajax_set_priority'));
        add_action('wp_ajax_db_move_to_front', array($this, 'ajax_move_to_front'));
        add_action('wp_ajax_db_toggle_auto_processing', array($this, 'ajax_toggle_auto_processing'));
        
        // Inicializovat hooky pro automatické zařazování do fronty
        $this->queue_manager->init_hooks();
    }
    
    public function add_admin_menu() {
        add_submenu_page(
            "tools.php", // Parent slug - Tools menu
            __( "Nearby Queue", "dobity-baterky" ),
            __( "Nearby Queue", "dobity-baterky" ),
            "manage_options",
            "db-nearby-queue",
            array( $this, "render_queue_page" )
        );
            'dobity-baterky',
            'Nearby Queue',
            'Nearby Queue',
            'manage_options',
            'db-nearby-queue',
            array($this, 'render_queue_page')
        );
    }
    
    public function render_queue_page() {
        $stats = $this->queue_manager->get_stats();
        $auto_status = $this->auto_processor->get_auto_status();
        $quota_stats = $this->quota_manager->get_usage_stats();
        ?>
        <div class="wrap">
            <h1>Nearby Queue Management</h1>
            <p>Správa fronty pro batch zpracování nearby bodů.</p>
            
            <?php if (!$auto_status['auto_enabled']): ?>
            <div class="notice notice-info" style="margin: 20px 0; padding: 15px; background: #d1ecf1; border-left: 4px solid #17a2b8;">
                <h3 style="margin: 0 0 10px 0; color: #0c5460;">ℹ️ Automatické zpracování vypnuto</h3>
                <p style="margin: 0; color: #0c5460;">
                    Automatické zpracování fronty je vypnuto. Můžete ho zapnout pomocí tlačítka níže 
                    nebo spouštět zpracování ručně.
                </p>
            </div>
            <?php endif; ?>
            
            <!-- Statistiky -->
            <div class="db-queue-stats" style="display: grid; grid-template-columns: repeat(auto-fit, minmax(200px, 1fr)); gap: 20px; margin: 20px 0;">
                <div class="db-stat-card" style="background: #f8f9fa; padding: 20px; border-radius: 8px; text-align: center;">
                    <h3 style="margin: 0 0 10px 0; color: #495057;">Celkem</h3>
                    <div style="font-size: 2em; font-weight: bold; color: #007cba;"><?php echo $stats->total; ?></div>
                </div>
                <div class="db-stat-card" style="background: #fff3cd; padding: 20px; border-radius: 8px; text-align: center;">
                    <h3 style="margin: 0 0 10px 0; color: #856404;">Čekající</h3>
                    <div style="font-size: 2em; font-weight: bold; color: #ffc107;"><?php echo $stats->pending; ?></div>
                </div>
                <div class="db-stat-card" style="background: #d1ecf1; padding: 20px; border-radius: 8px; text-align: center;">
                    <h3 style="margin: 0 0 10px 0; color: #0c5460;">Zpracovává se</h3>
                    <div style="font-size: 2em; font-weight: bold; color: #17a2b8;"><?php echo $stats->processing; ?></div>
                </div>
                <div class="db-stat-card" style="background: #d4edda; padding: 20px; border-radius: 8px; text-align: center;">
                    <h3 style="margin: 0 0 10px 0; color: #155724;">Dokončené</h3>
                    <div style="font-size: 2em; font-weight: bold; color: #28a745;"><?php echo $stats->completed; ?></div>
                </div>
                <div class="db-stat-card" style="background: #f8d7da; padding: 20px; border-radius: 8px; text-align: center;">
                    <h3 style="margin: 0 0 10px 0; color: #721c24;">Chyby</h3>
                    <div style="font-size: 2em; font-weight: bold; color: #dc3545;"><?php echo $stats->failed; ?></div>
                </div>
            </div>
            
            <!-- API Kvóty -->
            <div class="db-api-quotas" style="margin: 20px 0; padding: 15px; background: #f8f9fa; border-radius: 8px;">
                <h2>API Kvóty</h2>
                <div style="display: grid; grid-template-columns: repeat(auto-fit, minmax(200px, 1fr)); gap: 15px;">
                    <div style="background: white; padding: 15px; border-radius: 6px;">
                        <h4 style="margin: 0 0 8px 0;">Provider</h4>
                        <div style="font-size: 1.2em; font-weight: bold; color: #007cba;"><?php echo esc_html($quota_stats['provider']); ?></div>
                    </div>
                    <div style="background: white; padding: 15px; border-radius: 6px;">
                        <h4 style="margin: 0 0 8px 0;">Denní použití</h4>
                        <div style="font-size: 1.2em; font-weight: bold; color: #28a745;"><?php echo $quota_stats['daily_usage']; ?> / <?php echo $quota_stats['max_daily']; ?></div>
                    </div>
                    <div style="background: white; padding: 15px; border-radius: 6px;">
                        <h4 style="margin: 0 0 8px 0;">Zbývá</h4>
                        <div style="font-size: 1.2em; font-weight: bold; color: <?php echo $quota_stats['remaining'] > 0 ? '#28a745' : '#dc3545'; ?>"><?php echo $quota_stats['remaining']; ?></div>
                    </div>
                    <div style="background: white; padding: 15px; border-radius: 6px;">
                        <h4 style="margin: 0 0 8px 0;">Stav</h4>
                        <div style="font-size: 1.2em; font-weight: bold; color: <?php echo $quota_stats['can_process'] ? '#28a745' : '#dc3545'; ?>">
                            <?php echo $quota_stats['can_process'] ? '✓ Může pokračovat' : '✗ Čeká na reset'; ?>
                        </div>
                    </div>
                </div>
            </div>

            <!-- Automatické zpracování -->
            <div class="db-auto-processing" style="margin: 20px 0; padding: 15px; background: #e9ecef; border-radius: 8px;">
                <h2>Automatické zpracování</h2>
                <div style="display: flex; gap: 15px; align-items: center; flex-wrap: wrap;">
                    <div style="background: white; padding: 15px; border-radius: 6px; flex: 1; min-width: 200px;">
                        <h4 style="margin: 0 0 8px 0;">Stav</h4>
                        <div style="font-size: 1.1em; font-weight: bold; color: <?php echo $auto_status['auto_enabled'] ? '#28a745' : '#dc3545'; ?>">
                            <?php echo $auto_status['auto_enabled'] ? '✓ Zapnuto' : '✗ Vypnuto'; ?>
                        </div>
                        <?php if ($auto_status['next_run']): ?>
                        <div style="font-size: 0.9em; color: #666; margin-top: 5px;">
                            Další běh: <?php echo esc_html($auto_status['next_run']); ?>
                        </div>
                        <?php endif; ?>
                    </div>
                    <div style="display: flex; gap: 10px;">
                        <button type="button" class="button button-primary" id="db-toggle-auto">
                            <?php echo $auto_status['auto_enabled'] ? 'Vypnout' : 'Zapnout'; ?>
                        </button>
                        <button type="button" class="button button-secondary" id="db-trigger-auto">
                            Spustit nyní
                        </button>
                    </div>
                </div>
            </div>

            <!-- Akce -->
            <div class="db-queue-actions" style="margin: 20px 0;">
                <h2>Ruční akce</h2>
                <div style="display: flex; gap: 10px; flex-wrap: wrap;">
                    <button type="button" class="button button-primary" id="db-process-batch">
                        Zpracovat dávku (50 bodů)
                    </button>
                    <button type="button" class="button button-secondary" id="db-process-all">
                        Zpracovat všechny čekající
                    </button>
                    <button type="button" class="button button-secondary" id="db-enqueue-all">
                        Přidat všechny body do fronty
                    </button>
                    <button type="button" class="button button-secondary" id="db-reset-failed">
                        Resetovat chybné položky
                    </button>
                    <button type="button" class="button button-secondary" id="db-cleanup-old">
                        Vyčistit staré položky
                    </button>
                </div>
            </div>
            
            <!-- Podrobnosti fronty -->
            <div class="db-queue-details" style="margin: 20px 0;">
                <h2>Podrobnosti fronty</h2>
                <div style="display: flex; gap: 10px; margin-bottom: 15px;">
                    <button type="button" class="button button-secondary" id="db-refresh-details">
                        Obnovit
                    </button>
                    <select id="db-details-limit" style="padding: 5px;">
                        <option value="20">20 položek</option>
                        <option value="50" selected>50 položek</option>
                        <option value="100">100 položek</option>
                    </select>
                </div>
                <div id="db-queue-details-table" style="background: white; border: 1px solid #ddd; border-radius: 6px; overflow: hidden;">
                    <table class="wp-list-table widefat fixed striped" style="margin: 0;">
                        <thead>
                            <tr>
                                <th style="width: 50px;">ID</th>
                                <th style="width: 200px;">Bod</th>
                                <th style="width: 100px;">Typ</th>
                                <th style="width: 80px;">Priorita</th>
                                <th style="width: 100px;">Kandidáti</th>
                                <th style="width: 100px;">Stav</th>
                                <th style="width: 120px;">Vytvořeno</th>
                                <th style="width: 100px;">Akce</th>
                            </tr>
                        </thead>
                        <tbody id="db-queue-details-body">
                            <tr>
                                <td colspan="8" style="text-align: center; padding: 20px;">
                                    <div style="font-size: 16px; margin-bottom: 8px;">⏳</div>
                                    <div>Načítání podrobností...</div>
                                </td>
                            </tr>
                        </tbody>
                    </table>
                </div>
            </div>

            <!-- Výsledky -->
            <div id="db-queue-results" style="margin: 20px 0; padding: 15px; background: #f8f9fa; border-radius: 8px; display: none;">
                <h3>Výsledky</h3>
                <div id="db-queue-output"></div>
            </div>
            
            <!-- Cron info -->
            <div class="db-cron-info" style="margin: 20px 0; padding: 15px; background: #e9ecef; border-radius: 8px;">
                <h3>Automatické zpracování</h3>
                <p>Doporučujeme nastavit cron job pro automatické zpracování:</p>
                <code style="background: #fff; padding: 10px; display: block; margin: 10px 0; border-radius: 4px;">
                    # Zpracovat 500 bodů denně v 2:00<br>
                    0 2 * * * curl -s "<?php echo admin_url('admin-ajax.php'); ?>?action=db_process_nearby_batch&batch_size=500&nonce=<?php echo wp_create_nonce('db_nearby_batch'); ?>"
                </code>
                <p><strong>Nebo použít WordPress cron:</strong></p>
                <code style="background: #fff; padding: 10px; display: block; margin: 10px 0; border-radius: 4px;">
                    wp_schedule_event(time(), 'daily', 'db_nearby_daily_batch');
                </code>
            </div>
        </div>
        
        <script>
        jQuery(document).ready(function($) {
            // Zpracovat dávku
            $('#db-process-batch').on('click', function() {
                processBatch(50);
            });
            
            // Zpracovat všechny
            $('#db-process-all').on('click', function() {
                if (confirm('Opravdu chcete zpracovat všechny čekající položky? Může to trvat dlouho.')) {
                    processAll();
                }
            });
            
            // Přidat všechny body
            $('#db-enqueue-all').on('click', function() {
                if (confirm('Opravdu chcete přidat všechny body do fronty?')) {
                    enqueueAll();
                }
            });
            
            // Resetovat chybné
            $('#db-reset-failed').on('click', function() {
                if (confirm('Opravdu chcete resetovat všechny chybné položky?')) {
                    resetFailed();
                }
            });
            
            // Vyčistit staré
            $('#db-cleanup-old').on('click', function() {
                if (confirm('Opravdu chcete vyčistit staré dokončené položky?')) {
                    cleanupOld();
                }
            });
            
            function processBatch(size) {
                showLoading('Zpracovává se dávka...');
                $.post(ajaxurl, {
                    action: 'db_process_nearby_batch',
                    batch_size: size,
                    nonce: '<?php echo wp_create_nonce('db_nearby_batch'); ?>'
                }, function(response) {
                    showResult(response.data.message);
                    if (response.data.stats) {
                        updateStats(response.data.stats);
                    }
                }).fail(function() {
                    showResult('Chyba při zpracování dávky', 'error');
                });
            }
            
            function processAll() {
                showLoading('Zpracovávají se všechny položky...');
                $.post(ajaxurl, {
                    action: 'db_process_nearby_batch',
                    batch_size: 'all',
                    nonce: '<?php echo wp_create_nonce('db_nearby_batch'); ?>'
                }, function(response) {
                    showResult(response.data.message);
                    if (response.data.stats) {
                        updateStats(response.data.stats);
                    }
                }).fail(function() {
                    showResult('Chyba při zpracování', 'error');
                });
            }
            
            function enqueueAll() {
                showLoading('Přidávají se všechny body do fronty...');
                $.post(ajaxurl, {
                    action: 'db_enqueue_all_points',
                    nonce: '<?php echo wp_create_nonce('db_nearby_batch'); ?>'
                }, function(response) {
                    showResult(response.data.message);
                    if (response.data.stats) {
                        updateStats(response.data.stats);
                    }
                }).fail(function() {
                    showResult('Chyba při přidávání do fronty', 'error');
                });
            }
            
            function resetFailed() {
                showLoading('Resetují se chybné položky...');
                $.post(ajaxurl, {
                    action: 'db_reset_failed_items',
                    nonce: '<?php echo wp_create_nonce('db_nearby_batch'); ?>'
                }, function(response) {
                    showResult(response.data.message);
                    if (response.data.stats) {
                        updateStats(response.data.stats);
                    }
                }).fail(function() {
                    showResult('Chyba při resetování', 'error');
                });
            }
            
            function cleanupOld() {
                showLoading('Čistí se staré položky...');
                $.post(ajaxurl, {
                    action: 'db_cleanup_old_items',
                    nonce: '<?php echo wp_create_nonce('db_nearby_batch'); ?>'
                }, function(response) {
                    showResult(response.data.message);
                    if (response.data.stats) {
                        updateStats(response.data.stats);
                    }
                }).fail(function() {
                    showResult('Chyba při čištění', 'error');
                });
            }
            
            function showLoading(message) {
                $('#db-queue-results').show();
                $('#db-queue-output').html('<div style="color: #007cba;">⏳ ' + message + '</div>');
            }
            
            function showResult(message, type = 'success') {
                $('#db-queue-results').show();
                const color = type === 'error' ? '#dc3545' : '#28a745';
                $('#db-queue-output').html('<div style="color: ' + color + ';">✓ ' + message + '</div>');
            }
            
            function updateStats(stats) {
                // Aktualizovat statistiky na stránce
                location.reload();
            }
            
            // Nové funkce pro podrobnosti fronty
            $('#db-refresh-details').on('click', function() {
                loadQueueDetails();
            });
            
            $('#db-details-limit').on('change', function() {
                loadQueueDetails();
            });
            
            // Toggle automatické zpracování
            $('#db-toggle-auto').on('click', function() {
                toggleAutoProcessing();
            });
            
            // Spustit automatické zpracování nyní
            $('#db-trigger-auto').on('click', function() {
                triggerAutoProcessing();
            });
            
            function loadQueueDetails() {
                const limit = $('#db-details-limit').val();
                showLoading('Načítají se podrobnosti fronty...');
                
                $.post(ajaxurl, {
                    action: 'db_get_queue_details',
                    limit: limit,
                    nonce: '<?php echo wp_create_nonce('db_nearby_batch'); ?>'
                }, function(response) {
                    if (response.success) {
                        renderQueueDetails(response.data);
                    } else {
                        showResult('Chyba při načítání podrobností', 'error');
                    }
                }).fail(function() {
                    showResult('Chyba při načítání podrobností', 'error');
                });
            }
            
            function renderQueueDetails(items) {
                const tbody = $('#db-queue-details-body');
                tbody.empty();
                
                if (items.length === 0) {
                    tbody.html('<tr><td colspan="8" style="text-align: center; padding: 20px;">Žádné položky ve frontě</td></tr>');
                    return;
                }
                
                items.forEach(function(item) {
                    const row = $(`
                        <tr>
                            <td>${item.id}</td>
                            <td>${item.post_title || 'N/A'}</td>
                            <td>${item.origin_type}</td>
                            <td>${item.priority}</td>
                            <td>${item.candidates_count}</td>
                            <td><span class="status-${item.status}">${item.status}</span></td>
                            <td>${new Date(item.created_at).toLocaleString()}</td>
                            <td>
                                <button class="button button-small" onclick="moveToFront(${item.id})">Na začátek</button>
                            </td>
                        </tr>
                    `);
                    tbody.append(row);
                });
            }
            
            function toggleAutoProcessing() {
                showLoading('Přepíná se automatické zpracování...');
                
                $.post(ajaxurl, {
                    action: 'db_toggle_auto_processing',
                    nonce: '<?php echo wp_create_nonce('db_nearby_batch'); ?>'
                }, function(response) {
                    if (response.success) {
                        showResult(response.data.message);
                        setTimeout(() => location.reload(), 1000);
                    } else {
                        showResult('Chyba při přepínání', 'error');
                    }
                }).fail(function() {
                    showResult('Chyba při přepínání', 'error');
                });
            }
            
            function triggerAutoProcessing() {
                showLoading('Spouští se automatické zpracování...');
                
                $.post(ajaxurl, {
                    action: 'db_trigger_auto_processing',
                    nonce: '<?php echo wp_create_nonce('db_nearby_batch'); ?>'
                }, function(response) {
                    if (response.success) {
                        showResult(response.data.message);
                        setTimeout(() => location.reload(), 1000);
                    } else {
                        showResult('Chyba při spouštění', 'error');
                    }
                }).fail(function() {
                    showResult('Chyba při spouštění', 'error');
                });
            }
            
            // Globální funkce pro akce v tabulce
            window.moveToFront = function(id) {
                if (confirm('Opravdu chcete přesunout tuto položku na začátek fronty?')) {
                    $.post(ajaxurl, {
                        action: 'db_move_to_front',
                        id: id,
                        nonce: '<?php echo wp_create_nonce('db_nearby_batch'); ?>'
                    }, function(response) {
                        if (response.success) {
                            showResult(response.data.message);
                            loadQueueDetails();
                        } else {
                            showResult('Chyba při přesouvání', 'error');
                        }
                    }).fail(function() {
                        showResult('Chyba při přesouvání', 'error');
                    });
                }
            };
            
            // Načíst podrobnosti při načtení stránky
            loadQueueDetails();
        });
        </script>
        <?php
    }
    
    public function ajax_process_batch() {
        check_ajax_referer('db_nearby_batch', 'nonce');
        
        if (!current_user_can('manage_options')) {
            wp_die('Nedostatečná oprávnění');
        }
        
        $batch_size = $_POST['batch_size'] ?? 50;
        
        if ($batch_size === 'all') {
            $result = $this->batch_processor->process_all_pending();
        } else {
            $result = $this->batch_processor->process_batch((int)$batch_size);
        }
        
        $stats = $this->queue_manager->get_stats();
        
        wp_send_json_success(array(
            'message' => $result['message'],
            'stats' => $stats
        ));
    }
    
    public function ajax_enqueue_all_points() {
        check_ajax_referer('db_nearby_batch', 'nonce');
        
        if (!current_user_can('manage_options')) {
            wp_die('Nedostatečná oprávnění');
        }
        
        $added_count = $this->queue_manager->enqueue_all_points();
        $stats = $this->queue_manager->get_stats();
        
        wp_send_json_success(array(
            'message' => "Přidáno {$added_count} bodů do fronty",
            'stats' => $stats
        ));
    }
    
    public function ajax_reset_failed_items() {
        check_ajax_referer('db_nearby_batch', 'nonce');
        
        if (!current_user_can('manage_options')) {
            wp_die('Nedostatečná oprávnění');
        }
        
        $reset_count = $this->queue_manager->reset_failed_items();
        $stats = $this->queue_manager->get_stats();
        
        wp_send_json_success(array(
            'message' => "Resetováno {$reset_count} chybných položek",
            'stats' => $stats
        ));
    }
    
    public function ajax_cleanup_old_items() {
        check_ajax_referer('db_nearby_batch', 'nonce');
        
        if (!current_user_can('manage_options')) {
            wp_die('Nedostatečná oprávnění');
        }
        
        $deleted_count = $this->queue_manager->cleanup_old_items();
        $stats = $this->queue_manager->get_stats();
        
        wp_send_json_success(array(
            'message' => "Smazáno {$deleted_count} starých položek",
            'stats' => $stats
        ));
    }
    
    public function ajax_get_queue_details() {
        check_ajax_referer('db_nearby_batch', 'nonce');
        
        if (!current_user_can('manage_options')) {
            wp_die('Nedostatečná oprávnění');
        }
        
        $limit = (int)($_POST['limit'] ?? 50);
        $items = $this->queue_manager->get_queue_details($limit);
        
        wp_send_json_success($items);
    }
    
    public function ajax_set_priority() {
        check_ajax_referer('db_nearby_batch', 'nonce');
        
        if (!current_user_can('manage_options')) {
            wp_die('Nedostatečná oprávnění');
        }
        
        $id = (int)($_POST['id'] ?? 0);
        $priority = (int)($_POST['priority'] ?? 0);
        
        $result = $this->queue_manager->set_priority($id, $priority);
        
        if ($result) {
            wp_send_json_success(array('message' => 'Priorita nastavena'));
        } else {
            wp_send_json_error(array('message' => 'Chyba při nastavování priority'));
        }
    }
    
    public function ajax_move_to_front() {
        check_ajax_referer('db_nearby_batch', 'nonce');
        
        if (!current_user_can('manage_options')) {
            wp_die('Nedostatečná oprávnění');
        }
        
        $id = (int)($_POST['id'] ?? 0);
        
        $result = $this->queue_manager->move_to_front($id);
        
        if ($result) {
            wp_send_json_success(array('message' => 'Položka přesunuta na začátek fronty'));
        } else {
            wp_send_json_error(array('message' => 'Chyba při přesouvání'));
        }
    }
    
    public function ajax_toggle_auto_processing() {
        check_ajax_referer('db_nearby_batch', 'nonce');
        
        if (!current_user_can('manage_options')) {
            wp_die('Nedostatečná oprávnění');
        }
        
        $auto_status = $this->auto_processor->get_auto_status();
        
        if ($auto_status['auto_enabled']) {
            $this->auto_processor->stop_auto_processing();
            update_option('db_nearby_auto_enabled', false);
            $message = 'Automatické zpracování vypnuto';
        } else {
            $this->auto_processor->restart_auto_processing();
            update_option('db_nearby_auto_enabled', true);
            $message = 'Automatické zpracování zapnuto';
        }
        
        wp_send_json_success(array('message' => $message));
    }
    
    public function ajax_trigger_auto_processing() {
        check_ajax_referer('db_nearby_batch', 'nonce');
        
        if (!current_user_can('manage_options')) {
            wp_die('Nedostatečná oprávnění');
        }
        
        $this->auto_processor->trigger_auto_processing();
        
        wp_send_json_success(array('message' => 'Automatické zpracování spuštěno'));
    }
}
